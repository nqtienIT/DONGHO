@model CuaHangDongHo.Models.ContactInfo
@using CuaHangDongHo.Defines
@{
    ViewBag.Title = "Info";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="card card-info">
    <div class="card-header">
        <h3 class="card-title">Chi tiết</h3>
    </div>
    <!-- /.card-header -->
    <!-- form start -->
    <form class="form-horizontal" action="@Url.Action("Update", "Contacts")" method="post">
        <div class="card-body">
            <div class="form-group row">
                @Html.LabelFor(model => model.Map, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        @Html.EditorFor(model => model.Map, new { htmlAttributes = new { @class = "form-control", placeholder = "HTML Map" } })
                        @Html.ValidationMessageFor(model => model.Map, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Map, new { htmlAttributes = new { @class = "form-control", placeholder = "HTML Map", @readonly = true } })
                    }
                </div>
                <div class="col-12 mt-2">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        <button type="button" class="float-md-right btn btn-info" id="btnPreview">Xem</button>
                    }
                    else
                    {
                        <button type="button" class="float-md-right btn btn-info" disabled id="btnPreview">Xem</button>
                    }
                </div>
                <div class="col-sm-12 mt-2" id="previewMap">
                    @Html.Raw(Model.Map)
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Responsible, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        @Html.EditorFor(model => model.Responsible, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm..." } })
                        @Html.ValidationMessageFor(model => model.Responsible, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Responsible, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm...", @readonly = true } })
                    }
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm..." } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm...", @readonly = true } })
                    }
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm..." } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm...", @readonly = true } })
                    }
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {<div class="row">
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.ProvinceId, Model.lstProvinces, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger d-block" })
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.DistricstId, Model.lstDistricts, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DistricstId, "", new { @class = "text-danger d-block" })
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.CommuneId, Model.lstCommunes, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CommuneId, "", new { @class = "text-danger d-block" })
                            </div>
                            <div class="col-md-12 mt-3">
                                @Html.EditorFor(model => model.DetailAddress, new { htmlAttributes = new { placeholder = "Số nhà", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DetailAddress, "", new { @class = "text-danger d-block" })
                            </div>
                        </div>
                    }
                    else
                    {
                        @Html.EditorFor(model => model.AddressInfo, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm...", @readonly = true } })
                    }

                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm..." } })
                        @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm...", @readonly = true } })
                    }
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm..." } })
                        @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm...", @readonly = true } })
                    }
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Twitter, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        @Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm..." } })
                        @Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm...", @readonly = true } })
                    }
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Zalo, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
                    {
                        @Html.EditorFor(model => model.Zalo, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm..." } })
                        @Html.ValidationMessageFor(model => model.Zalo, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Zalo, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên sản phẩm...", @readonly = true } })
                    }
                </div>
            </div>
            <!-- /.card-body -->
            @if (ViewBag.Role == Enums.RoleType.Admin.ToString())
            {
                <div class="card-footer">
                    <button class="btn btn-success float-right" type="submit">Lưu</button>  
                </div>
            }
            <!-- /.card-footer -->
        </div>
    </form>
</div>

@section  AfterJs {
    <script src="~/Scripts/admin/contacts-js.js"></script>
}


@model IEnumerable<CuaHangDongHo.Models.User>
@using CuaHangDongHo.Helpers

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <!-- /.card-header -->
            <div class="card-header">
                <div class="row">
                    <div class="col-6">
                        <h3 class="card-title">Danh sách Users</h3>
                    </div>
                    <div class="col-6">
                        @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-success float-right" })
                    </div>

                    @{
                        if (!String.IsNullOrEmpty(ViewBag.ErrMsg))
                        {
                            <div class="alert alert-danger col-12 mt-3" role="alert">
                                @ViewBag.ErrMsg
                            </div>
                        }
                        else if (!String.IsNullOrEmpty(ViewBag.SuccessMsg))
                        {
                            <div class="alert alert-success col-12 mt-3" role="alert">
                                @ViewBag.SuccessMsg
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="card-body">
                <div id="example1_wrapper" class="dataTables_wrapper dt-bootstrap4">
                    <div class="col-sm-12">
                        <table id="tblUsers" class="table table-bordered table-striped dataTable dtr-inline" role="grid" aria-describedby="example1_info">
                            <thead>
                                <tr role="row">
                                    <th>
                                        STT.
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.FullName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UserName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Email)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Gender)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Phone)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Access)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Status)
                                    </th>
                                    <th>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int stt = 1;
                                }
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @stt
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FullName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.UserName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Email)
                                        </td>
                                        <td>
                                            @item.Gender.GetEnumDisplayName()
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Phone)
                                        </td>
                                        <td>
                                            @item.Access.GetEnumDisplayName()
                                        </td>
                                        <td>
                                            @item.Status.GetEnumDisplayName()
                                        </td>
                                        <td>
                                            @Html.ActionLink("Xem", "Details", new { id = item.Id })
                                            | @Html.ActionLink("Sửa", "Edit", new { id = item.Id })

                                            @if (item.Id != ViewBag.LoginUser.Id)
                                            {
                                            <span> | @Html.ActionLink("Xóa", "Delete", new { id = item.Id })</span>
                                            }
                                        </td>
                                    </tr>
                                    stt++;
                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.card-body -->
    </div>

</div>

@section BeforeCss {
    <link href="~/Content/css/sweetalert2/bootstrap-4.min.css" rel="stylesheet" />
    <link href="~/Content/css/toastr/toastr.min.css" rel="stylesheet" />
}

@section AfterJs {
    <script src="~/Scripts/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/Scripts/toastr/toastr.min.js"></script>
    <script src="~/Scripts/admin/users-js.js"></script>
    @*<script>
            $(function () {

                //    const Toast = Swal.mixin({
                //        toast: true,
                //        position: 'top-end',
                //        showConfirmButton: false,
                //        timer: 5000,
                //        timerProgressBar: true,
                //        didOpen: (toast) => {
                //            toast.addEventListener('mouseenter', Swal.stopTimer)
                //            toast.addEventListener('mouseleave', Swal.resumeTimer)
                //        }
                //    })

                //    Toast.fire({
                //        icon: 'success',
                //        title: 'Sửa thành công'
                //    })
                toastr["success"]("My name is Inigo Montoya. You killed my father. Prepare to die!")

                toastr.options = {
                    "closeButton": false,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
            })

        </script>*@
}
@model CuaHangDongHo.Models.User
@using CuaHangDongHo.Defines
@using CuaHangDongHo.Helpers

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="card card-info">
        <div class="card-header">
            <h3 class="card-title">Thêm mới người dùng</h3>
        </div>
        <!-- /.card-header -->
        <!-- form start -->
        <form class="form-horizontal">
            <div class="card-body">
                <div class="form-group row">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Họ và tên..." } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên đăng nhập..." } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Mật khẩu...", type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.PasswordAgain, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.PasswordAgain, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập lại mật khẩu...", type = "password" } })
                        @Html.ValidationMessageFor(model => model.PasswordAgain, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @*@Html.RadioButtonFor(model => model.Gender, "1", new { @checked = "checked" })@Html.Label("Nam")
                            @Html.RadioButtonFor(model => model.Gender, "2", new { @class = "ml-5" })@Html.Label("Nữ")*@
                        @foreach (Enums.GenderType gender in Enum.GetValues(typeof(Enums.GenderType)))
                        {
                            @Html.RadioButtonFor(model => model.Gender, (int)gender, gender == Enums.GenderType.Male ? new { @checked = "checked" } : null)
                            @Html.Label(gender.GetEnumDisplayName(), new { @class = "ml-1 mr-5" })
                        }

                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập email..." } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Số điện thoại..." } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        <div class="row">
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.ProvinceId, Model.lstProvinces, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger d-block" })
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.DistricstId, Model.lstDistricts, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DistricstId, "", new { @class = "text-danger d-block" })
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.CommuneId, Model.lstCommunes, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CommuneId, "", new { @class = "text-danger d-block" })
                            </div>
                            <div class="col-md-12 mt-3">
                                @Html.EditorFor(model => model.DetailAddress, new { htmlAttributes = new { placeholder = "Số nhà", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DetailAddress, "", new { @class = "text-danger d-block" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Access, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EnumDropDownListFor(m => m.Access, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Access, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EnumDropDownListFor(m => m.Status, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- /.card-body -->
                <div class="card-footer">
                    <button type="submit" class="btn btn-info">Sign in</button>
                    <button type="submit" class="btn btn-success float-right" id="btnSave">Thêm mới</button>
                </div>
                <!-- /.card-footer -->
        </form>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section AfterJs {
    <script src="~/Scripts/admin/users-js.js"></script>
}
